version: "3"
services:
  # api:
  #   container_name: iron-monkey-api
  #   build:
  #     context: .
  #     dockerfile: ./IronMonkey.Api/Dockerfile
  #   #command: dotnet run
  #   volumes:
  #     - ./IronMonkey.Api/:/usr/src/app
  #     - ~/.aspnet/https:/https:ro
  #     - /usr/src/app/bin #this way we do not copy host bin to container, took 1 hrs to figure out
  #     - /usr/src/app/obj
  #   working_dir: /usr/src/app
  #   ports:
  #     - 5002:5002
  #   environment:
  #     - ASPNETCORE_Kestrel__Certificates__Default__Password=password
  #     - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
  #     # - DOTNET_RUNNING_IN_CONTAINER=true
  #     # - ASPNETCORE_APPL_PATH=/use/src/app
  #     # - ASPNETCORE_SUPPRESSSTATUSMESSAGES=true
  #     - DOTNET_USE_POLLING_FILE_WATCHER=1
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     # - NUGET_FALLBACK_PACKAGES=/root/.nuget/fallbackpackages
  #     # - NUGET_PACKAGES=/root/.nuget/packages
  #   depends_on:
  #     - mongo
  # workflow:
  #   container_name: iron-monkey-workflow
  #   build:
  #     context: .
  #     dockerfile: ./.docker/dev/elsa/Dockerfile
  #   command: dotnet run
  #   volumes:
  #     - ~/db:/usr/src/db
  #     - ./Workflow/:/usr/src/app
  #     - ~/.aspnet/https:/https:ro
  #     - /usr/src/app/bin #this way we do not copy host bin to container, took 1 hrs to figure out
  #     - /usr/src/app/obj
  #   working_dir: /usr/src/app
  #   ports:
  #     - 5001:5001
  #   depends_on:
  #     - mysql
  web:
    container_name: iron-monkey-web
    build: ./.docker/web
    command: npm run dev
    volumes:
      - ./Web/:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - 5173:5173
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   ports:
  #     - '8888:8888'
  #   environment:
  #     - UPLOAD_LIMIT=100M
  #     - PMA_ARBITRARY=1
  #     - PMA_HOST=mysql
  #     - MYSQL_ROOT_PASSWORD=root
  #     - APACHE_PORT=8888
  #   depends_on:
  #     - mysql
  mongo:
    image: mongodb/mongodb-community-server:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    ports:
      - '27017:27017'
    volumes:
      - "mongo:/data/db"
  # mysql: 
  #   environment: 
  #     - MYSQL_ROOT_PASSWORD=root
  #     - MYSQL_DATABASE=family
  #     - MYSQL_USER=root
  #     - MYSQL_PASSWORD=root
  #   image: "mariadb:10.5"
  #   ports: 
  #     - "3306:3306"
  #   volumes: 
  #     - "mysql-family-db:/var/lib/mysql"
volumes:
  mongo: